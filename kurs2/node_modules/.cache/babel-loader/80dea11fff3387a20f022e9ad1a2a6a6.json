{"ast":null,"code":"import _slicedToArray from \"/home/general/kurs/kurs2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/general/kurs/kurs2/src/components/ModalLine.js\";\nimport React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FirstStage from './FirstStage';\nimport SecondStage from './SecondStage';\nimport { Grid, Paper } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  backButton: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  stepper: {\n    backgroundColor: theme.palette.background.default\n  },\n  paperCss: {\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(2) // textAlign:'center'\n\n  }\n}));\n\nfunction getSteps() {\n  return ['Select document', 'select', 'Conclusion'];\n}\n\nfunction getStepContent(stepIndex, documentState, setDocumentState) {\n  switch (stepIndex) {\n    case 0:\n      return React.createElement(FirstStage, {\n        documentState: documentState,\n        setDocumentState: setDocumentState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(SecondStage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function ModalLine() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const _useState = useState({\n    selectedDate: \"\",\n    documentState: \"\",\n    selectedState: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        documentState = _useState2[0],\n        setDocumentState = _useState2[1];\n\n  console.log(documentState);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    className: classes.stepper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, steps.map(label => React.createElement(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, label)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"All steps completed\"), React.createElement(Button, {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paperCss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, getStepContent(activeStep, documentState, setDocumentState))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.backButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Back\"), React.createElement(Button, {\n    disabled: activeStep === 0 && Object.keys(documentState).filter(value => documentState[value] === \"\").length > 0,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}","map":{"version":3,"sources":["/home/general/kurs/kurs2/src/components/ModalLine.js"],"names":["React","useRef","useState","makeStyles","Stepper","Step","StepLabel","Button","Typography","FirstStage","SecondStage","Grid","Paper","useStyles","theme","root","width","backButton","marginRight","spacing","instructions","marginTop","marginBottom","display","justifyContent","stepper","backgroundColor","palette","background","default","paperCss","padding","paddingTop","getSteps","getStepContent","stepIndex","documentState","setDocumentState","ModalLine","classes","activeStep","setActiveStep","selectedDate","selectedState","console","log","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length","Object","keys","filter","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FirstStage from './FirstStage';\nimport SecondStage from './SecondStage';\nimport { Grid, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    \n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    display:\"flex\",\n    justifyContent:\"center\"\n  },\n  stepper:{\n    backgroundColor:theme.palette.background.default\n  },\n  paperCss:{\n    padding:theme.spacing(1),\n    paddingTop:theme.spacing(2)\n    // textAlign:'center'\n  }\n}));\n\nfunction getSteps() {\n  return ['Select document', 'select', 'Conclusion'];\n}\n\nfunction getStepContent(stepIndex,documentState,setDocumentState) {\n  switch (stepIndex) {\n    case 0:\n      return <FirstStage documentState={documentState} setDocumentState={setDocumentState} />;\n    case 1:\n      return <SecondStage/>;\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown stepIndex';\n  }\n}\n\nexport default function ModalLine() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [documentState,setDocumentState]=useState({\n    selectedDate:\"\",\n    documentState:\"\",\n    selectedState:\"\"\n  })\n  console.log(documentState)\n  const steps = getSteps();\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n\n  \n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>All steps completed</Typography>\n            <Button onClick={handleReset}>Reset</Button>\n          </div>\n        ) : (\n          <div><Paper className={classes.paperCss}>\n\n      <Grid container spacing={1}>\n      {getStepContent(activeStep,documentState,setDocumentState)}\n            </Grid>\n            </Paper>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button disabled={activeStep===0&& Object.keys(documentState).filter(value=>documentState[value]===\"\").length>0 }    variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}