{"ast":null,"code":"import _slicedToArray from \"/home/general/kurs/kurs2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/general/kurs/kurs2/src/components/Columns/Columns.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport styles from \"./Columns.module.scss\";\nimport withCollapse from \"../../hoc/withCollapse\";\nimport withAuth from \"../../hoc/withAuth\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst Columns = ({\n  isCollapsed,\n  isAuthorised,\n  toggleAuth,\n  toggle\n}) => {\n  const rowClass = cx(\"columns\", {\n    [styles.isCollapsed]: isCollapsed\n  });\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const _React$useState3 = React.useState(getModalStyle),\n        _React$useState4 = _slicedToArray(_React$useState3, 1),\n        modalStyle = _React$useState4[0];\n\n  const classes = useStyles();\n  const body = React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Text in a modal\"), React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\"), React.createElement(SimpleModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"columns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Authorised: \", isAuthorised.toString()), React.createElement(\"button\", {\n    className: \"button is-dark is-large\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"collapse\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Open Modal\"), React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, body), React.createElement(\"button\", {\n    className: \"button is-warning is-large\",\n    onClick: toggleAuth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, isAuthorised ? \"logout\" : \"login\"), isAuthorised ? React.createElement(\"div\", {\n    className: rowClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification is-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"First column\")), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification is-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Second column\")), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification is-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Third column\")), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification is-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Fourth column\"))) : React.createElement(\"h2\", {\n    class: \"title is-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"You must sign in to see this content\")));\n};\n\nexport default withAuth(withCollapse(Columns));","map":{"version":3,"sources":["/home/general/kurs/kurs2/src/components/Columns/Columns.js"],"names":["React","cx","styles","withCollapse","withAuth","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Columns","isCollapsed","isAuthorised","toggleAuth","toggle","rowClass","useState","open","setOpen","handleOpen","handleClose","getModalStyle","modalStyle","classes","body","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBL,KAHrC;AAILM,IAAAA,MAAM,EAAE,gBAJH;AAKLC,IAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CALN;AAMLC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ;AADgC,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,UAA7B;AAAyCC,EAAAA;AAAzC,CAAD,KAAuD;AACrE,QAAMC,QAAQ,GAAGvB,EAAE,CAAC,SAAD,EAAY;AAC7B,KAACC,MAAM,CAACkB,WAAR,GAAsBA;AADO,GAAZ,CAAnB;;AADqE,0BAI7CpB,KAAK,CAACyB,QAAN,CAAe,KAAf,CAJ6C;AAAA;AAAA,QAI9DC,IAJ8D;AAAA,QAIxDC,OAJwD;;AAMrE,QAAMC,UAAU,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAVqE,2BAahD3B,KAAK,CAACyB,QAAN,CAAeK,aAAf,CAbgD;AAAA;AAAA,QAa9DC,UAb8D;;AAcrE,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AAEA,QAAM4B,IAAI,GACR;AAAK,IAAA,KAAK,EAAEF,UAAZ;AAAwB,IAAA,SAAS,EAAEC,OAAO,CAACxB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAG,IAAA,EAAE,EAAC,0BAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAFF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBa,YAAY,CAACa,QAAb,EAAhB,CADF,EAEE;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEX,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEK,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAQA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,OAAO,EAAEG,WAFX;AAGE,uBAAgB,oBAHlB;AAIE,wBAAiB,0BAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGI,IANH,CARA,EAgBE;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAA+C,IAAA,OAAO,EAAEX,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,YAAY,GAAG,QAAH,GAAc,OAD7B,CAhBF,EAmBGA,YAAY,GACX;AAAK,IAAA,SAAS,EAAEG,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAPF,EAUE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAVF,CADW,GAgBX;AAAI,IAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAnCJ,CADF,CADF;AA0CD,CApED;;AAsEA,eAAepB,QAAQ,CAACD,YAAY,CAACgB,OAAD,CAAb,CAAvB","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport styles from \"./Columns.module.scss\";\nimport withCollapse from \"../../hoc/withCollapse\";\nimport withAuth from \"../../hoc/withAuth\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst Columns = ({ isCollapsed, isAuthorised, toggleAuth, toggle }) => {\n  const rowClass = cx(\"columns\", {\n    [styles.isCollapsed]: isCollapsed,\n  });\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n      </p>\n      <SimpleModal />\n    </div>\n  );\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column\">\n        <p>Authorised: {isAuthorised.toString()}</p>\n        <button className=\"button is-dark is-large\" onClick={toggle}>\n          collapse\n        </button>\n        <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n        <button className=\"button is-warning is-large\" onClick={toggleAuth}>\n          {isAuthorised ? \"logout\" : \"login\"}\n        </button>\n        {isAuthorised ? (\n          <div className={rowClass}>\n            <div className=\"column\">\n              <div className=\"notification is-primary\">First column</div>\n            </div>\n            <div className=\"column\">\n              <div className=\"notification is-primary\">Second column</div>\n            </div>\n            <div className=\"column\">\n              <div className=\"notification is-primary\">Third column</div>\n            </div>\n            <div className=\"column\">\n              <div className=\"notification is-primary\">Fourth column</div>\n            </div>\n          </div>\n        ) : (\n          <h2 class=\"title is-2\">You must sign in to see this content</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(withCollapse(Columns));\n"]},"metadata":{},"sourceType":"module"}